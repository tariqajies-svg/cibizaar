version: "3.8"

services:
  php:
    container_name: bizaar-php
    image: 369129824209.dkr.ecr.eu-west-1.amazonaws.com/magebit-docker:php-8.1-fpm
    volumes:
      - ./.:/var/www/html
      - sock_data:/sock
    environment:
      - COMPOSER_VERSION=2.4.0
    depends_on:
      - db
      - redis
      - elasticsearch

  xdebug:
    container_name: bizaar-php-xdebug
    image: 369129824209.dkr.ecr.eu-west-1.amazonaws.com/magebit-docker:php-8.1-fpm-xdebug
    environment:
      - PHP_IDE_CONFIG=serverName=bizaar.docker
    volumes:
      - ./.:/var/www/html
      - sock_data:/sock
    depends_on:
      - db
      - redis
      - elasticsearch

  nginx:
    container_name: bizaar-nginx
    image: 369129824209.dkr.ecr.eu-west-1.amazonaws.com/magebit-docker:nginx-1.17
    volumes:
      - ./.:/var/www/html:ro
      - sock_data:/sock
    depends_on:
      - php
      - xdebug

  db:
    container_name: bizaar-mysql
    image: mariadb:10.3
    environment:
      - MYSQL_USER=magento
      - MYSQL_PASSWORD=magento
      - MYSQL_DATABASE=magento
      - MYSQL_ROOT_PASSWORD=magento
    volumes:
      - ./.docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d/
      - db_data:/var/lib/mysql
    networks:
      default:
        aliases:
          - db.bizaar.docker

  varnish:
    container_name: bizaar-varnish
    build:
      context: .docker/varnish
      dockerfile: Dockerfile
    depends_on:
      - nginx

  redis:
    container_name: bizaar-redis
    image: redis:6.0-alpine
    volumes:
      - redis_data:/data
    networks:
      default:
        aliases:
          - redis.bizaar.docker

  elasticsearch:
    container_name: bizaar-elasticsearch
    image: 369129824209.dkr.ecr.eu-west-1.amazonaws.com/magebit-docker:elasticsearch-7.9
    user: root
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      default:
        aliases:
          - es.bizaar.docker

  node:
    container_name: bizaar-node
    image: node:16
    command: tail -F anything
    working_dir: /opt/app
    volumes:
      - ./.:/opt/app
    user: 1000:1000

volumes:
  sock_data:
  db_data:
  redis_data:
  elasticsearch_data:
