<?php
/**
 * This file is part of the Magebit/bizaar design package.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade to newer
 * versions in the future.
 *
 * @copyright Copyright (c) 2022 Magebit, Ltd. (https://magebit.com/)
 * @author Magebit <info@magebit.com>
 * @license MIT
 */

declare(strict_types=1);

use Hyva\Theme\ViewModel\ReCaptcha;
use Magento\Cms\Block\BlockByIdentifier;
use Magento\Customer\Block\Form\Register;
use Magento\Customer\Block\Widget\Dob;
use Magento\Customer\Block\Widget\Gender;
use Magento\Customer\Block\Widget\Name;
use Magento\Customer\Block\Widget\Taxvat;
use Magento\Framework\Escaper;

// phpcs:disable Magento2.Templates.ThisInTemplate.FoundHelper
// phpcs:disable Generic.Files.LineLength.TooLong

/** @var Register $block */
/** @var Escaper $escaper */
/** @var ReCaptcha $recaptcha */

$formId = 'accountcreate';

// Do not replace this with $viewModels->require(ReCaptcha::class); that might break the dependency
// on the Magento_ReCaptchaCustomer module
$recaptcha = $block->getData('viewModelRecaptcha');
$region = $block->getAttributeData()->getFrontendLabel('region');
$selectRegion = 'Please select a region, state or province.';
$displayAll = $block->getConfig('general/region/display_all');
?>
<div class="w-full mb-2 lg:mb-12 mt-2.5 lg:mt-6.25">
    <?php /* Extensions placeholder */ ?>
    <?= $block->getChildHtml('customer.form.register.extra') ?>
    <form class="form create account form-create-account"
          action="<?= $escaper->escapeUrl($block->getUrl('customer/account/register')) ?>"
          x-data="{...initForm(), ...hyva.formValidation($el)}"
          @private-content-loaded.window="onPrivateContentLoaded(event.detail.data)"
          id="<?= $escaper->escapeHtmlAttr($formId) ?>"
          @submit.prevent="submitForm()"
          method="post" id="form-validate" enctype="multipart/form-data" autocomplete="off">
        <?= /* @noEscape */
        $block->getBlockHtml('formkey'); ?>
        <?= $block->getChildHtml('form_fields_before') ?>
        <?= $recaptcha ? $recaptcha->getInputHtml('customer_create') : '' ?>
        <div class="login-card flex flex-col">
            <fieldset class="fieldset lg:grid lg:grid-cols-2 lg:gap-x-7">
                <legend class="mb-5 lg:mb-6.75">
                    <h3>
                        <?= $escaper->escapeHtml(__('Sign-in Information')) ?></h3>
                </legend>
                <input type="hidden" name="success_url" value="<?= $escaper->escapeUrl($block->getSuccessUrl()) ?>">
                <input type="hidden" name="error_url" value="<?= $escaper->escapeUrl($block->getErrorUrl()) ?>">

                <div class="mb-5 col-span-2 lg:grid xl:grid-cols-2 xl:gap-x-7">
                    <div class="field col-start-1">
                        <input type="radio" name="is_company_account" x-model="isCompanyAccount"
                               title="<?= $escaper->escapeHtmlAttr(__('Company Account')) ?>"
                               value="1"
                               id="is_company_account"
                               class="radio">
                        <label class="inline-label" for="is_company_account">
                            <span><?= $escaper->escapeHtml(__('Company Account')) ?> -
                                <span class="font-semibold text-primary text-sm">
                                    <?= $escaper->escapeHtml(__('Access to B2B Pricing & Special Deals')) ?>
                                </span>
                            </span>
                        </label>
                    </div>
                    <div class="field col-start-1">
                        <input type="radio" name="is_account" x-model="isCompanyAccount"
                               title="<?= $escaper->escapeHtmlAttr(__('Personal Account')) ?>"
                               id="is_personal_account"
                               value="0"
                               class="radio">

                        <label class="inline-label" for="is_personal_account">
                            <span><?= $escaper->escapeHtml(__('Personal Account')) ?></span>
                        </label>
                    </div>
                </div>

                <?= $block->getLayout()->createBlock(Name::class)->setObject(
                    $block->getFormData()
                )->setForceUseCustomerAttributes(true)->toHtml() ?>

                <div class="field field-preserved required !mb-5 lg:!mb-7">
                    <label for="email_address" class="label">
                        <span>
                            <?= $escaper->escapeHtml(__('E-mail address')) ?>
                        </span>
                    </label>
                    <div class="control">
                        <input type="email" name="email" autocomplete="email" id="email_address"
                               data-validate='{"required": true}'
                               value="<?= $escaper->escapeHtmlAttr($block->getFormData()->getEmail()) ?>"
                               title="<?= $escaper->escapeHtmlAttr(__('Email')) ?>" class="form-input"/>
                    </div>
                </div>

                <?php $dob = $block->getLayout()->createBlock(Dob::class) ?>
                <?php if ($dob->isEnabled()): ?>
                    <?= $dob->setDate($block->getFormData()->getDob())->toHtml() ?>
                <?php endif ?>

                <?php $taxvat = $block->getLayout()->createBlock(Taxvat::class) ?>
                <?php if ($taxvat->isEnabled()): ?>
                    <?= $taxvat->setTaxvat($block->getFormData()->getTaxvat())->toHtml() ?>
                <?php endif ?>

                <?php $gender = $block->getLayout()->createBlock(Gender::class) ?>
                <?php if ($gender->isEnabled()): ?>
                    <?= $gender->setGender($block->getFormData()->getGender())->toHtml() ?>
                <?php endif ?>
                <?= $block->getChildHtml('fieldset_create_info_additional') ?>

                <div class="field field-preserved required !mb-5 lg:!mb-7">
                    <label for="password" class="label relative" x-data="{ tooltip: false, bottom: 0 }">
                        <span><?= $escaper->escapeHtml(__('Password')) ?></span>
                        <div class="absolute w-full z-50 bubble-bottom"
                             x-cloak
                             x-show="tooltip"
                             :style="'bottom:' + (bottom + 8) + 'px'"
                             x-transition:enter="transition ease-out duration-200"
                             x-transition:enter-start="opacity-0 scale-90"
                             x-transition:enter-end="opacity-100 scale-100"
                             x-transition:leave="transition ease-in duration-200"
                             x-transition:leave-start="opacity-100 scale-100"
                             x-transition:leave-end="opacity-0 scale-90">
                                <span class="whitespace-normal">
                                    <?= $escaper->escapeHtml(__(
                                        'Minimum of different classes of characters in password is %1.'
                                        . ' Classes of characters: Lower Case, Upper Case, Digits, Special Characters.',
                                        $block->getRequiredCharacterClassesNumber()
                                    )) ?>
                                </span>
                        </div>
                        <i class="icon icon-info align-middle text-xs leading-[12px] px-1 lg-max:hidden"
                           x-on:mouseover=" bottom = $el.getBoundingClientRect().height; tooltip = true;"
                           x-on:mouseleave="tooltip = false"></i>
                    </label>
                    <div class="control">
                        <?php $minimumPasswordLength = $block->getMinimumPasswordLength() ?>
                        <input type="password" name="password" id="password"
                               title="<?= $escaper->escapeHtmlAttr(__('Password')) ?>"
                               minlength="<?= $escaper->escapeHtmlAttr($minimumPasswordLength) ?>"
                               class="form-input"
                               data-validate='{"required": true}'
                               autocomplete="off">
                    </div>
                </div>
                <div class="field field-preserved required !mb-0 lg:!mb-7">
                    <label for="password-confirmation" class="label">
                        <span>
                            <?= $escaper->escapeHtml(__('Confirm Password')) ?>
                        </span>
                    </label>
                    <div class="control">
                        <input type="password" name="password_confirmation"
                               title="<?= $escaper->escapeHtmlAttr(__('Confirm Password')) ?>"
                               id="password-confirmation"
                               data-validate='{"equalTo": "password"}'
                               minlength="<?= $escaper->escapeHtmlAttr($minimumPasswordLength) ?>"
                               class="form-input"
                               autocomplete="off">
                    </div>
                </div>
                <?= $block->getChildHtml('form_additional_info') ?>
                <?= $recaptcha ? $recaptcha->getLegalNoticeHtml('customer_create') : '' ?>
            </fieldset>
            <div class="mt-4 pb-5 mt-4 border-b lg:mt-2.75 lg:pb-10.25" :class="{'order-3 !mt-0': isCompanyAccount === '1'}">
                <fieldset class="fieldset">
                    <div class="space-y-4 lg:space-y-2.75">
                        <?php if ($block->isNewsletterEnabled()): ?>
                            <div class="field newsletter flex">
                                <label class="inline-label !mb-0 !w-auto items-start">
                                    <input type="checkbox" name="is_subscribed" class="checkbox mt-1.5"
                                           title="<?= $escaper->escapeHtmlAttr(__('Sign Up for Newsletter')) ?>"
                                           value="1"
                                           id="is_subscribed"
                                           checked="checked">
                                    <span>
                                        <?= $escaper->escapeHtml(__('Keep me posted for deals and promotions')) ?>
                                    </span>
                                </label>
                            </div>
                            <?php /* Extensions placeholder */ ?>
                            <?= $block->getChildHtml('customer.form.register.newsletter') ?>
                        <?php endif ?>
                        <div class="field field-reserved field-pagebuilder">
                            <label class="inline-label !mb-0 items-start">
                                <input name="terms-and-conditions"
                                       class="checkbox mt-1.5"
                                       data-validate='{"required": true}'
                                       id="terms-and-conditions"
                                       type="checkbox"
                                       title="<?= $escaper->escapeHtmlAttr(__('Terms and Conditions agreement')) ?>"/>
                                <span class="!p-0">
                                    <?= $block->getLayout()->createBlock(BlockByIdentifier::class)->setIdentifier('terms-and-conditions-notice')->toHtml() ?>
                                </span>
                            </label>
                        </div>
                    </div>
                </fieldset>
            </div>
            <div class="col-span-5" x-cloak x-show="isCompanyAccount === '1'">
                <?= /** @noEscape */
                $block->getChildHtml('company_register') ?>
            </div>
            <div
                class="actions-toolbar w-full col-span-5 !mt-5 !pt-0 lg:!mt-12 lg:!justify-end"
                :class="{'order-4': isCompanyAccount === '1'}"
            >
                <div class="flex flex-col w-full md:w-auto gap-4">
                    <button type="submit" class="action submit primary btn btn-primary lg-max:w-full"
                            title="<?= $escaper->escapeHtmlAttr(__('Create an Account')) ?>">
                        <span><?= $escaper->escapeHtml(__('Create an Account')) ?></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="actions-toolbar lg:flex-row !mt-5 !pt-0 lg:!mt-14">
            <div class="secondary self-center">
                <a href="<?= $escaper->escapeUrl($block->getBackUrl()) ?>">
                    <span>
                        <?= $escaper->escapeHtml(__('Back')) ?>
                    </span>
                </a>
            </div>
        </div>
        <?= /** @noEscape */
        $block->getChildHtml('register_loading') ?>
    </form>

    <script>
        function initForm() {
            return {
                passwordsMatching: true,
                errors: 0,
                hasCaptchaToken: 0,
                isLoading: false,
                isCompanyAccount: '0',
                submitForm() {
                    this.isLoading = true;
                    this.validate().then(() => {
                        // Do not rename $form, the variable is expected to be declared in the recaptcha output
                        const $form = document.querySelector('#<?= $escaper->escapeJs($formId) ?>');
                        <?= $recaptcha ? $recaptcha->getValidationJsHtml('customer_create') : '' ?>

                        if (this.errors === 0) {
                            $form.submit();
                        }
                    }).catch((invalid) => {
                        this.isLoading = false;
                        if (invalid.length > 0) {
                            invalid[0].focus();
                        }
                    })
                },
                directoryData: {},
                availableRegions: {},
                selectedRegion: <?= $escaper->escapeJs($block->getRegion() ?: 0) ?>,
                isZipRequired: true,
                isRegionRequired: true,
                onPrivateContentLoaded(data) {
                    this.directoryData = data['directory-data'] || {};

                    <?php if ($block->getCountryId()): ?>
                    this.changeCountry(this.$refs['country_id']);
                    <?php endif; ?>

                    this.setInitialRegionSelectValue();
                    this.setRegionInputValue('<?= $escaper->escapeHtmlAttr($block->getRegion()) ?>');

                },
                setInitialRegionSelectValue(value) {
                    this.$nextTick(() => {
                        const regionSelectorElement = this.$refs['region_id'];
                        if (regionSelectorElement) {

                            const regionOptionByValue = regionSelectorElement
                                .querySelector("[name='<?= /** @noEscape */ $block->getRegion() ?>']");

                            if (regionOptionByValue) {
                                this.$refs['region_id'].value = regionOptionByValue.value;
                            }
                        }
                    })
                },
                setRegionInputValue(value) {
                    this.$nextTick(() => {
                        const regionInputElement = this.$refs['region'];
                        if (regionInputElement) {
                            regionInputElement.value = value;
                        }
                    })
                },
                changeCountry(countrySelectElement) {
                    const selectedOption = countrySelectElement.options[countrySelectElement.selectedIndex];
                    const countryCode = countrySelectElement.value;
                    const countryData = this.directoryData[countryCode] || false;

                    this.setRegionInputValue('');

                    if (!countryData) {
                        return;
                    }

                    this.isZipRequired = selectedOption.dataset.isZipRequired === "1";
                    this.isRegionRequired = selectedOption.dataset.isRegionRequired === "1";

                    this.availableRegions = countryData.regions || {};
                },
                hasAvailableRegions() {
                    return Object.keys(this.availableRegions).length > 0;
                }
            }
        }

        window.onload = function WindowLoad(event) {
            /**
             * Checks if at least one tax fild is filled
             */
            hyva.formValidation.addRule('one-is-required', function (value, options, field, context) {
                if (!context.fields['company[tax_id]'].element.value && !context.fields['company_extend[tln]'].element.value) {
                    return 'At least one is mandatory.';
                }
                return true;
            });
        }
    </script>
</div>
